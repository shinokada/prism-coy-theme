"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var vfm_1 = require("@vivliostyle/vfm");
var chalk_1 = __importDefault(require("chalk"));
var chokidar_1 = __importDefault(require("chokidar"));
var fs_1 = __importDefault(require("fs"));
var get_port_1 = __importDefault(require("get-port"));
var http_1 = __importDefault(require("http"));
var path_1 = __importStar(require("path"));
var resolve_pkg_1 = __importDefault(require("resolve-pkg"));
var serve_handler_1 = __importDefault(require("serve-handler"));
var commander_1 = require("commander");
function preview(argv, input) {
    return __awaiter(this, void 0, void 0, function () {
        function recompile(tmpHTMLPath) {
            var convertedHTML = vfm_1.stringify(fs_1.default.readFileSync(layout, 'utf8'));
            fs_1.default.writeFileSync(tmpHTMLPath, convertedHTML);
            console.log(chalk_1.default.yellow('[vfm]') + " compiled", tmpHTMLPath);
        }
        var stylePath, layout, baseDir, assetPort, assetRoot, assetPrefix, assetServer, viewerPort, viewerPkg, viewerRoot, viewerPrefix, viewerServer, sourcePort, sourceRoot, sourcePrefix, sourceServer, layoutURL, styleURL, isVFM, layoutDir, tmpHTMLName, tmpHTMLPath_1, entrypoint;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    stylePath = input[0];
                    if (!stylePath) {
                        console.log('vivliostyle-theme-scripts <stylePath> [--layout <layout.html>]');
                        process.exit(1);
                    }
                    layout = argv.layout;
                    baseDir = process.cwd();
                    return [4 /*yield*/, get_port_1.default()];
                case 1:
                    assetPort = _a.sent();
                    assetRoot = path_1.default.resolve(__dirname, '../assets');
                    assetPrefix = "http://localhost:" + assetPort;
                    assetServer = http_1.default
                        .createServer(function (req, res) {
                        return __awaiter(this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        res.setHeader('Access-Control-Allow-Origin', '*');
                                        return [4 /*yield*/, serve_handler_1.default(req, res, {
                                                public: assetRoot,
                                            })];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/];
                                }
                            });
                        });
                    })
                        .listen(assetPort);
                    return [4 /*yield*/, get_port_1.default()];
                case 2:
                    viewerPort = _a.sent();
                    viewerPkg = resolve_pkg_1.default('@vivliostyle/viewer', { cwd: baseDir });
                    viewerRoot = path_1.join(viewerPkg, 'lib');
                    viewerPrefix = "http://localhost:" + viewerPort;
                    viewerServer = http_1.default
                        .createServer(function (req, res) {
                        return __awaiter(this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, serve_handler_1.default(req, res, {
                                            public: viewerRoot,
                                        })];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/];
                                }
                            });
                        });
                    })
                        .listen(viewerPort);
                    return [4 /*yield*/, get_port_1.default()];
                case 3:
                    sourcePort = _a.sent();
                    sourceRoot = baseDir;
                    sourcePrefix = "http://localhost:" + sourcePort;
                    sourceServer = http_1.default
                        .createServer(function (req, res) {
                        return __awaiter(this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        res.setHeader('Access-Control-Allow-Origin', '*');
                                        res.setHeader('Cache-Control', 'no-store');
                                        return [4 /*yield*/, serve_handler_1.default(req, res, {
                                                public: sourceRoot,
                                            })];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/];
                                }
                            });
                        });
                    })
                        .listen(sourcePort);
                    layoutURL = layout
                        ? sourcePrefix + "/" + layout
                        : assetPrefix + "/default.html";
                    styleURL = sourcePrefix + "/" + stylePath;
                    isVFM = layout && layout.endsWith('.md');
                    if (isVFM) {
                        layoutDir = path_1.dirname(path_1.resolve(layout));
                        tmpHTMLName = path_1.basename(layout, '.md') + '.html';
                        tmpHTMLPath_1 = path_1.relative(baseDir, path_1.join(layoutDir, tmpHTMLName));
                        chokidar_1.default
                            .watch('**', {
                            ignored: function (p) {
                                return /node_modules|\.git/.test(p);
                            },
                            cwd: layoutDir,
                        })
                            .on('change', function (path) {
                            if (!path || !/\.(md|markdown)$/i.test(path))
                                return;
                            recompile(tmpHTMLPath_1);
                        });
                        recompile(tmpHTMLPath_1);
                        layoutURL = sourcePrefix + "/" + tmpHTMLPath_1;
                    }
                    entrypoint = viewerPrefix + "/#src=" + layoutURL + "&style=" + styleURL + "&bookMode=true&spread=false";
                    console.log("open preview in the browser and test your theme ([ctrl+c] to quit)\n  " + chalk_1.default.bold.green(entrypoint) + "\n  ");
                    return [2 /*return*/];
            }
        });
    });
}
function makeCommand() {
    var command = new commander_1.Command('preview');
    command
        .description('clone a repository into a newly created directory')
        .option('-l, --layout <layout>', 'HTML Layout')
        .action(preview);
    return command;
}
exports.default = makeCommand;
