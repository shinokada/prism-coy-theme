"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validatePackage = exports.getAuthor = exports.getTheme = void 0;
var fs_1 = require("fs");
function getTheme(pkgJson) {
    var _a, _b, _c, _d;
    var maybeStyle = (_d = (_c = (_b = (_a = pkgJson === null || pkgJson === void 0 ? void 0 : pkgJson.vivliostyle) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.style) !== null && _c !== void 0 ? _c : pkgJson.style) !== null && _d !== void 0 ? _d : pkgJson.main;
    if (!maybeStyle) {
        return undefined;
    }
    return maybeStyle;
}
exports.getTheme = getTheme;
function getAuthor(pkgJson) {
    var _a, _b, _c;
    return (_c = (_b = (_a = pkgJson === null || pkgJson === void 0 ? void 0 : pkgJson.vivliostyle) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.author) !== null && _c !== void 0 ? _c : pkgJson === null || pkgJson === void 0 ? void 0 : pkgJson.author;
}
exports.getAuthor = getAuthor;
function validatePackage(packagePath) {
    try {
        var result = [];
        var pkgJson = JSON.parse(fs_1.readFileSync(packagePath, 'utf8'));
        if (!pkgJson)
            return [{ type: 'error', message: 'failed to parse package.json.' }];
        var theme = getTheme(pkgJson);
        if (!theme) {
            result.push({
                type: 'error',
                message: "missing style locator. set one of the followings:\n- vivliostyle.theme.style\n- style\n- main",
            });
        }
        if (!getAuthor(pkgJson)) {
            result.push({
                type: 'warning',
                message: "missing author. set one of the followings:\n- vivliostyle.theme.author\n- author",
            });
        }
        return result;
    }
    catch (err) {
        return [{ type: 'error', message: "package.json doesn't exist." }];
    }
}
exports.validatePackage = validatePackage;
