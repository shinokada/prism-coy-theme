/// <reference types="node" />
import debugConstructor from 'debug';
import fs from 'fs';
export declare const debug: debugConstructor.Debugger;
export declare const cwd: string;
export declare let beforeExitHandlers: (() => void)[];
export declare function startLogging(text?: string): void;
export declare function stopLogging(text?: string, symbol?: string): void;
export declare function log(...obj: any): void;
export declare function logUpdate(...obj: string[]): void;
export declare function logSuccess(...obj: string[]): void;
export declare function logError(...obj: string[]): void;
export declare function logInfo(...obj: string[]): void;
export declare function gracefulError(err: Error): void;
export declare function readJSON(path: string): any;
export declare function statFile(filePath: string): Promise<fs.Stats>;
export declare function inflateZip(filePath: string, dest: string): Promise<void>;
export declare function useTmpDirectory(): Promise<[string, () => void]>;
export declare function touchTmpFile(path: string): Promise<() => void>;
export declare function pathStartsWith(path1: string, path2: string): boolean;
export declare function isUrlString(str: string): boolean;
//# sourceMappingURL=util.d.ts.map