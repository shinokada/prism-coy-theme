"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupPreviewParserProgram = void 0;
const commander_1 = __importDefault(require("commander"));
function setupPreviewParserProgram() {
    const program = new commander_1.default.Command();
    program
        .name('vivliostyle preview')
        .description('launch preview server')
        .arguments('[input]')
        .option('-c, --config <config_file>', 'path to vivliostyle.config.js')
        .option('-T, --theme <theme>', 'theme path or package name')
        .option('-s, --size <size>', `output pdf size [Letter]
preset: A5, A4, A3, B5, B4, JIS-B5, JIS-B4, letter, legal, ledger
custom(comma separated): 182mm,257mm or 8.5in,11in`)
        .option('--style <stylesheet>', 'additional stylesheet URL or path')
        .option('--user-style <user_stylesheet>', 'user stylesheet URL or path')
        .option('-d, --single-doc', 'single HTML document input')
        .option('-q, --quick', 'quick loading with rough page count')
        .option('--title <title>', 'title')
        .option('--author <author>', 'author')
        .option('-l, --language <language>', 'language')
        .option('--verbose', 'verbose log output')
        .option('--no-sandbox', `launch chrome without sandbox (use this option to avoid ECONNREFUSED error)`)
        .option('--executable-chromium <path>', 'specify a path of executable Chrome(Chromium) you installed');
    return program;
}
exports.setupPreviewParserProgram = setupPreviewParserProgram;
//# sourceMappingURL=preview.parser.js.map