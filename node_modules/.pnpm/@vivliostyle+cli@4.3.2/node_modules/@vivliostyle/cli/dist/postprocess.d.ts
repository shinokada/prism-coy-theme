/// <reference types="node" />
import { Meta, TOCItem } from './broker';
import { MergedConfig } from './config';
import { PdfOutput } from './output';
export declare type SaveOption = Pick<PdfOutput, 'preflight' | 'preflightOption'> & Pick<MergedConfig, 'image'>;
export declare function pressReadyWithContainer({ input, output, preflightOption, image, }: {
    input: string;
    output: string;
    preflightOption: string[];
    image: string;
}): Promise<void>;
export declare class PostProcess {
    private document;
    static load(pdf: Buffer): Promise<PostProcess>;
    private constructor();
    save(output: string, { preflight, preflightOption, image }: SaveOption): Promise<void>;
    metadata(tree: Meta): Promise<void>;
    toc(items: TOCItem[]): Promise<void>;
}
//# sourceMappingURL=postprocess.d.ts.map