interface OutputFormatTrait<T extends string = string> {
    format: T;
}
/** A single file of PDF */
export interface PdfOutput extends OutputFormatTrait<'pdf'> {
    path: string;
    renderMode: 'local' | 'docker';
    preflight: 'press-ready' | 'press-ready-local' | null;
    preflightOption: string[];
}
/** A directory including publication.json, series of (X)HTML files and assets */
export interface WebPublicationOutput extends OutputFormatTrait<'webpub'> {
    path: string;
}
export declare type OutputFormat = PdfOutput | WebPublicationOutput;
export declare const checkOutputFormat: (v: unknown) => v is "pdf" | "webpub";
export declare const checkRenderMode: (v: unknown) => v is "docker" | "local";
export declare const checkPreflightMode: (v: unknown) => v is "press-ready" | "press-ready-local" | null;
export declare function detectOutputFormat(outputPath: string): OutputFormat['format'];
export {};
//# sourceMappingURL=output.d.ts.map