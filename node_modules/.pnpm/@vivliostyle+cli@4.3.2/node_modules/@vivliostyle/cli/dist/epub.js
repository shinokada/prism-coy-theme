"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.openEpubToTmpDirectory = void 0;
const fast_xml_parser_1 = __importDefault(require("fast-xml-parser"));
const fs_1 = __importDefault(require("fs"));
const upath_1 = __importDefault(require("upath"));
const util_1 = require("./util");
const pickFirstOne = (arg) => Array.isArray(arg) ? arg[0] : arg;
async function openEpubToTmpDirectory(filePath) {
    const [tmpDir, deleteEpub] = await util_1.useTmpDirectory();
    await util_1.inflateZip(filePath, tmpDir);
    const containerXmlPath = upath_1.default.join(tmpDir, 'META-INF/container.xml');
    const { container } = fast_xml_parser_1.default.parse(fs_1.default.readFileSync(containerXmlPath, 'utf8'), {
        ignoreAttributes: false,
    });
    const rootfile = pickFirstOne(container.rootfiles.rootfile); // Only supports a default rendition
    const epubOpfPath = upath_1.default.join(tmpDir, rootfile['@_full-path']);
    return { dest: tmpDir, epubOpfPath, deleteEpub };
}
exports.openEpubToTmpDirectory = openEpubToTmpDirectory;
//# sourceMappingURL=epub.js.map